[ 'BoolInt', [ 'True' ], 0 ]


/*
'use strict';

function $arrayToListBuiltin(xs) {
  const reducer = (accumulator, currentValue) => ["Cons", currentValue, accumulator];
  return xs.reduceRight(reducer, ["Nil"]);
}

function $unicodeListizeBuiltin(t) {
  let xs = t.split('').map(c => c.codePointAt())
  return ["Unicode", $arrayToListBuiltin(xs)];
}

function $compareBuiltin(a, b) {
  if (a > b) {
    return ["GreaterThan"];
  } else if (b > a) {
    return ["LessThan"];
  } else {
    return ["Equal"];
  }
}

const _BoolInt = _arg1 => _arg2 => ["BoolInt", _arg1, _arg2];
const _False = ["False"];
const _True = ["True"];
const _result = _BoolInt(_True)(0);

console.log(_result);
*/
